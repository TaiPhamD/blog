[
  {
    "objectID": "posts/uefi-secure-boot/index.html",
    "href": "posts/uefi-secure-boot/index.html",
    "title": "UEFI Secure Boot",
    "section": "",
    "text": "Following this tutorial, I have successfully enrolled my own certificate for self-signing the OpenCore bootloader to support Secure Boot.\nLet’s explore what happens when you sign an UEFI image. I recommend using an Ubuntu VM to have access to sbsign tool for UEFI development so you can follow the below commands:\n# Download opencore so you can get a clean unsigned UEFI application (You can use any .efi app so it doesn't have to be OpenCore)\ncurl -L https://github.com/acidanthera/OpenCorePkg/releases/download/0.8.3/OpenCore-0.8.3-RELEASE.zip > opencore.zip\nunzip opencore.zip -d opencore\n\n# Generate an Image Signing Key (ISK) using openSSL\nopenssl req -new -x509 -newkey rsa:2048 -sha256 -days 365 -subj \"/CN=Image Signing Key\" -keyout ISK.key -out ISK.pem\n# Using sbsign to sign the image. This app is part of sbsigntools\nsbsign --key ISK.key --cert ISK.pem opencore/X64/EFI/BOOT/BOOTx64.efi --output opencore/X64/EFI/BOOT/BOOTx64_signed.efi\nWe can run the following Python code to see the file size differences:\n\n\nCode\n# Print file size of unsigned and signed image\n\nwith open(\"opencore/X64/EFI/BOOT/BOOTx64.efi\", mode=\"rb\") as file:  # b is important -> binary\n    unsigned_image = file.read()\n    print(\"Unsigned image file size :\", len(unsigned_image))\n\nwith open(\"opencore/X64/EFI/BOOT/BOOTx64_signed.efi\", mode=\"rb\") as file:  # b is important -> binary\n    signed_image = file.read()\n    print(\"Signed image file size :\", len(signed_image))\n\n\nUnsigned image file size : 20484\nSigned image file size : 22056\n\n\nAs we can see the signed image increased by 1572 Bytes. This is because the signature is added to the original image. Now we will try to extract the signed certificate from the signed image. The UEFI image uses a Microsoft PE file system as described here. We can extract the certificate using the following steps:\n\nLocate the PE header by finding PE header offset from 0x3C file offset\nRead Optional Header immediate after the PE header to read the Magic code to determine offset for PE vs PE+ to get to the Certificate Table\nExtract each certificate by assuming the first certificate will start at the Certificate Table VirtualAddress. Then the next certificate will be 8-byte aligned from the end of the previous certificate. We will loop until the offset exceed the Certificate Table VirtualAddress + Size.\n\n\n\nCode\n# per microsoft PE/COFF spec, the first 4 bytes at 0x3c offset will point to the start of the PE header\npe_header = signed_image[0x3C : 0x3C + 4]\npe_header_offset = int.from_bytes(pe_header, \"little\") + 4\nprint(\"pe header offset :\", pe_header_offset)\n\n# Decode PE header\nimport ctypes\nclass PE_header(ctypes.Structure):\n    _fields_ = (\n        (\"Machine\", ctypes.c_uint16),\n        (\"NumberOfSections\", ctypes.c_uint16),\n        (\"TimeDateStamp\", ctypes.c_uint32),\n        (\"PointerToSymbolTable\", ctypes.c_uint32),\n        (\"NumberOfSymbols\", ctypes.c_uint32),\n        (\"SizeOfOptionalHeader\", ctypes.c_uint16),\n        (\"Characteristics\", ctypes.c_uint16),\n    )\n\nraw_pe_header = signed_image[pe_header_offset : pe_header_offset + ctypes.sizeof(PE_header)]\npe_header = PE_header.from_buffer_copy(raw_pe_header)\n\n# Print PE header\nprint(\"PE header info: \")\nprint(\"\\tMachine :\", hex(pe_header.Machine))\nprint(\"\\tNumberOfSections :\", pe_header.NumberOfSections)\nprint(\"\\tTimeDateStamp :\", pe_header.TimeDateStamp)\nprint(\"\\tPointerToSymbolTable :\", pe_header.PointerToSymbolTable)\nprint(\"\\tNumberOfSymbols :\", pe_header.NumberOfSymbols)\nprint(\"\\tSizeOfOptionalHeader :\", pe_header.SizeOfOptionalHeader)\nprint(\"\\tCharacteristics :\", hex(pe_header.Characteristics))\n\n\n# Decode Magic from optional header\n\nraw_optional_header = signed_image[\n    pe_header_offset\n    + ctypes.sizeof(PE_header) : pe_header_offset\n    + ctypes.sizeof(PE_header)\n    + pe_header.SizeOfOptionalHeader\n]\nmagic = raw_optional_header[0:2]\n\n\nif magic == b\"\\x0b\\x01\":\n    print(\"Found a PE32 image\")\n    cert_table_offset = 128\nelif magic == b\"\\x0b\\x02\":\n    print(\"Found a PE32+ image\")\n    cert_table_offset = 144\nelse:\n    print(\"Unknown PE magic\")\n    exit()\nraw_cert_table = raw_optional_header[cert_table_offset : cert_table_offset + 8]\n\n# Decode Optional Header Data Directory to get certificates\nclass DATA_Directory(ctypes.Structure):\n    _fields_ = (\n        (\"VirtualAddress\", ctypes.c_uint32),\n        (\"Size\", ctypes.c_uint32),\n    )\n# Optional Header Data Directory contains start of Cert address and total size of all certs\ncert_table = DATA_Directory.from_buffer_copy(raw_cert_table)\nprint(\"\\nCertificate Table VirtualAddress:\", cert_table.VirtualAddress)\nprint(\"Certificate Table Size:\", cert_table.Size)\n\n\npe header offset : 132\nPE header info: \n    Machine : 0x8664\n    NumberOfSections : 2\n    TimeDateStamp : 0\n    PointerToSymbolTable : 20480\n    NumberOfSymbols : 0\n    SizeOfOptionalHeader : 240\n    Characteristics : 0x30e\nFound a PE32+ image\n\nCertificate Table VirtualAddress: 20488\nCertificate Table Size: 1568\n\n\nWe found the Certificate Table starts at offset 20488 with a size of 1568 bytes. Now we can write our loop to read all certificates:\n\n\nCode\n# walk to cert table\n\nclass Cert_Attribute(ctypes.Structure):\n    _fields_ = (\n        (\"dwLength\", ctypes.c_uint32),\n        (\"wRevision\", ctypes.c_uint16),\n        (\"wCertificateType\", ctypes.c_uint16),\n    )\n\noffset = 0\ncerts = []\nwhile offset < cert_table.Size:\n    print(\"Cerificate at relative offset:\", offset)\n    raw_cert = signed_image[\n        cert_table.VirtualAddress\n        + offset : cert_table.VirtualAddress\n        + offset\n        + ctypes.sizeof(Cert_Attribute)\n    ]\n    cert = Cert_Attribute.from_buffer_copy(raw_cert)\n    print(\"\\tcert.dwLength\", cert.dwLength)\n    print(\"\\tcert.wRevision\", cert.wRevision)\n    print(\"\\tcert.wCertificateType\", cert.wCertificateType)\n    print(\"\\tCert attribute len: \", ctypes.sizeof(Cert_Attribute))\n    pcks = signed_image[\n        cert_table.VirtualAddress\n        + offset\n        + ctypes.sizeof(Cert_Attribute) : cert_table.VirtualAddress\n        + offset\n        + ctypes.sizeof(Cert_Attribute)\n        + cert.dwLength \n    ]\n    certs.append(pcks)\n    pad_len = (8 - ((offset + cert.dwLength) % 8)) % 8\n    offset += ctypes.sizeof(Cert_Attribute) + cert.dwLength + pad_len\n    print(\"\\tNext offset in cert table: \", offset)\n\nprint(\"We found a total of : \", len(certs), \"certificate(s)\")\n\n\nCerificate at relative offset: 0\n    cert.dwLength 1561\n    cert.wRevision 512\n    cert.wCertificateType 2\n    Cert attribute len:  8\n    Next offset in cert table:  1576\nWe found a total of :  1 certificate(s)\n\n\nOnce we have the certificate then we want to store it as a binary file in order to use openSSL lib to extract cert information and perform signature verification.\n\n\nCode\n# Write cert to file\nfor i,c in enumerate(certs):\n    # write c as a binary file\n    with open(f\"image_cert_{i}.bin\", mode=\"wb\") as file:  # b is important -> binary\n        file.write(c)"
  },
  {
    "objectID": "posts/uefi-secure-boot/opencore/Docs/Changelog.html",
    "href": "posts/uefi-secure-boot/opencore/Docs/Changelog.html",
    "title": "Peter Pham Github Pages",
    "section": "",
    "text": "Added ext4 file system driver\nAdded support for macOS 13 DP3 Kernel Collection\nAdded --force-device option to AudioDxe, allowing UEFI audio on HDA contollers which misreport themselves as non-HDA audio devices\nProvided optional unsafe fast file logging (suitable only for firmware with a fully compliant FAT32 driver)\nFixed incorrect OSBundleLibraries_x86_64 handling during cacheless injection\nChanged RsaTool not to link against system ssl on macOS\nFixed crash during cacheless injection when kext blocking is enabled\nRemoved default codec connection delay from AudioDxe\nAdded optional --codec-setup-delay argument to AudioDxe\nChanged units of Audio -> SetupDelay from microseconds to milliseconds (divide previous value by 1000 if using this setting)\nFixed incorrect FAT binary slice being selected under macOS 10.4.11 when performing a cacheless boot\nFixed rare assertion caused by label animation initialisation in OpenCanopy\nAdded --show-csr option for Toggle SIP boot menu entry\nAdded macOS 10.4 and 10.5 support to AllowRelocationBlock Booter quirk\nAdded CPU cache info injection for macOS 10.4 to ProvideCurrentCpuInfo quirk\nAdded emulated NVRAM driver for use separately from OpenDuet\nAdded support for NVRAM reset and set default boot entry when using emulated NVRAM\nUpgraded emulated NVRAM logout script to allow unsupervised installation of recent macOS OTA updates\nAdded Driver -> LoadEarly for drivers which need to be loaded before NVRAM init\n\n\n\n\n\nFixed AppleCpuPmCfgLock on macOS 13\nFixed DummyPowerManagement on macOS 13\nUpdated builtin firmware versions for SMBIOS and the rest\nAdded macOS 13 support for AvoidRuntimeDefrag Booter quirk\nAdded injected kext bundle version printing in DEBUG builds\nAdded Linux compatibility for CreateVault scripts\n\n\n\n\n\nImproved ExtendBTFeatureFlags quirk on newer macOS versions, thx @lvs1974\nAdded notes about DMAR table and ForceAquantiaEthernet, thx @kokowski\nAdded System option in LauncherOption property, thx @stevezhengshiqi\nUpdated note about CustomPciSerialDevice, thx @joevt\nAdded read-only driver for NTFS\nSwitched Reset NVRAM and Toggle SIP to configurable boot entry protocol drivers\nSupported optional Apple firmware-native NVRAM reset, thx @Syncretic\nSupported NVRAM reset optionally retaining BIOS boot entries\nSupported user specified csr-active-config value for Toggle SIP\nAdded optional Enabled and Disabled flavours for Toggle SIP (allows theme designers to provide distinct icons)\nAdded PIIX4 ACPI PM timer detection for TSC calculations on Hyper-V Gen1 VMs\n\n\n\n\n\nAdded support for early log preservation\nSwitched to Python 3 in scripts (use python /path/to/script to force Python 2)\nAdded ForceAquantiaEthernet for Aquantia AQtion AQC-107s based 10GbE network cards support, thx @Mieze and @Shikumo\nUpdated builtin firmware versions for SMBIOS and the rest\nAdded Misc -> Serial section to customise serial port properties\nAdded CustomPciSerialDevice quirk for XNU to correctly recognise customised external serial devices\n\n\n\n\n\nAdded auto-detect macOS Installer volume name for use when .disk_label file cannot be displayed\nAdded --restore-nosnoop flag to AudioDxe, making v0.7.7 fix for Windows sound opt-in\nAdded new method to disable trim when SetApfsTrimTimeout is set to zero\nFixed SetApfsTrimTimeout on macOS 12 (only works when set to zero)\nAdded script to build qemu recovery images to macrecovery\nFixed selecting SecureBootModel on hypervisors (should be x86legacy)\nAdded kext blocking Strategy for prelinked and newer\nAdded global MSR 35h fix to ProvideCurrentCpuInfo, allowing -cpu host in KVM\nFixed potential memory corruption with AVX acceleration enabled\nAdded LogModules for positive and negative log filtering by modules\nRenamed OpenLinuxBoot driver argument from partuuidopts:{PARTUUID} to autoopts:{PARTUUID}\nSupported booting Linux from stand-alone /boot partition without /loader/entries files (user must specify full kernel boot options)\nHandled XML entities in driver arguments\nUpdated underlying EDK II package to edk2-stable202202\n\n\n\n\n\nUpdated ocvalidate to warn about insecure DmgLoading with secure SecureBootModel (already disallowed in runtime)\nFixed AudioDxe not disabling unused channels after recent updates\nAllow gain to track OS volume on old macOS without SystemAudioVolumeDB\nFixed crash on no mouse support when verifying password\nFixed AppleInternal CSR bit being set with ProvideCustomSlide enabled\nAdded support for .contentFlavour and .contentDetails files for boot entry protocol entries including OpenLinuxBoot\nAdded LINUX_BOOT_ADD_RW flag to OpenLinuxBoot to support e.g. EndeavourOS\nAdded flags+= and flags-= arguments to OpenLinuxBoot to simplify setting driver flags if needed\nFixed OpenLinuxBoot entry name disambiguation when LINUX_BOOT_USE_LATEST flag is clear\nUpdated builtin firmware versions for SMBIOS and the rest\nFixed crash in OpenLinuxBoot with partly (re-)installed Linux distro\nImproved robustness in malformed PE image file parsing\n\n\n\n\n\nFixed rare crash caused by register corruption in the entry point\nAdded ProvideCurrentCpuInfo support for Intel Alder Lake\nFixed typo in Cpuid1Data recommendations for Intel Rocket Lake and newer\nUpdated builtin firmware versions for SMBIOS and the rest\nUpdated underlying EDK II package to edk2-stable202111\nResolved crashes in QEMU with AudioDxe\nAdded AudioDxe settings caching (avoids non-needed setup delays)\nAdded DisconnectHda quirk to allow UEFI sound on Apple hardware and others\nAdded workarounds for bugs in QEMU intel-hda driver to allow UEFI sound in QEMU\nImplemented multi-channel (e.g. bass+main speaker; speakers+headphones) UEFI sound with AudioOutMask\nFixed AudioDxe startup stalls when Nvidia HDA audio is present\nResolved AudioDxe disabling sound in Windows on some firmware\nAdded pointer polling period tuning in the builtin AppleEvent implementation\nAdded pointer device list tuning in the builtin AppleEvent implementation\nAdded VREF handling to support UEFI sound on more Apple hardware\nUpdated audio output channel detection to support UEFI sound on more Apple hardware\nAdded manual GPIO config (use --gpio-setup AudioDxe driver argument for UEFI sound on Apple hardware)\nSwitched UEFI audio levels to decibel gain to allow accurate matching of saved macOS volume levels\nSeparated settings for minimum audio assist volume and minimum audible volume\n\n\n\n\n\nFixed stack canary support when compiling with GCC\nAdded automatic scaling factor detection\nExplicitly restricted ResizeAppleGpuBars to 0 and -1\nFixed OpenCanopy long labels fade-out over graphics background\nFixed ProvideConsoleGop not disabling blit-only modes (e.g. on Z690)\nFixed Alder Lake SMBIOS CPU model information\nAdded XCPM CPU power management ACPI table for Intel Alder Lake\nUpdated draw order to avoid graphics tearing in OpenCanopy\nFixed handling PCI device paths with logical units in ScanPolicy\nAdded ReconnectGraphicsOnConnect option for enabling alternative UEFI graphics drivers\nAdded BiosVideo.efi driver to use with ReconnectGraphicsOnConnect\nChanged FadtEnableReset to avoid unreliable keyboard controller reset\nAdded EnableVmx quirk to allow virtualization in other OS on some Macs\nUpgraded ProtectUefiServices to prevent GRUB shim overwriting service pointers when chainloading with Secure Boot enabled\nRemoved deprecated SSDT-PNLFCFL\nFixed handling of zero-sized Memory Attributes Table\n\n\n\n\n\nRevised OpenLinuxBoot documentation\nSupported Linux ostree boot layout\nFixed external drive icons for Boot Entry Protocol\nAdded GPU Resize BAR quirks to reduce BARs on per-OS basis\nFixed OpenLinuxBoot hang bug after correct detection of some distros\nAdded DMG signature check during download, thx @jspraul and @zhangyoufu\nUpdated builtin firmware versions for SMBIOS and the rest\nUpdated recovery downloading commands to include macOS 11 and 12\n\n\n\n\n\nFixed Linux kernel sort order\nAdded Linux detection optional log detail\nFixed CPU core count detection for more legacy CPUs\nAdded ability to fully override autodetect Linux boot options\nAdded large BaseSystem support in AdviseFeatures\nUpdated builtin firmware versions for SMBIOS and the rest\nAdded tool to extract vendor secure boot certificate from GRUB shim file\nAdded BridgeOSHardwareModel NVRAM variable to fix T2 SB AP models on macOS 12\nChanged Default Apple Secure Boot model to match SMBIOS for macOS 12\nFixed opencore-version not being added to NVRAM variables\n\n\n\n\n\nImproved SSDT-PNLF compatibility with CFL+ graphics\nFixed OpenCanopy performance loss due to redrawing introduced in 0.6.9\nAdded pattern-based automatic variable initialisation for better security\nUpdated underlying EDK II package to edk2-stable202108\nUpdated Apple Secure Boot variables for x86legacy\nUpdated Linux variants in Flavours.md\nImplemented Boot Entry Protocol, allowing plug-in boot entry drivers\nAdded StringBuffer and FlexArray libraries\nUpdated Drivers to support arguments (requires config.plist update, see samples)\nAdded OpenLinuxBoot driver: OC-native Linux autodetect and boot without chaining via GRUB\nFixed overlong boot entry names breaking text flow in builtin menu\nAdded ForceOcWriteFlash UEFI quirk to enable writing OC system variables\n\n\n\n\n\nFixed OSBundleLibraries/OSBundleLibaries64 handling\nAdded GraphicsInputMirroring to fix lost keystrokes in some non-Apple graphical UEFI apps\nAdded support for stack canaries (security cookies / stack guards)\nFixed unintialised memory access in AudioDxe causing audio playback failure\nChanged Default Apple Secure Boot model to x86legacy for better security and compatibility\nIncreased default APFS MinDate and MinVersion to macOS Big Sur for better security\nUpdated builtin firmware versions for SMBIOS and the rest\nImproved SSDT-PNLF compatibility with Windows and newer graphics\nFixed CLANGPDB OpenCore builds by shortening OC magic\n\n\n\n\n\nAdded SyncTableIds quirk to sync modified table OEM identifiers\nAdded CPU Info (MSRs) dumping to SysReport\nUpdated builtin firmware versions for SMBIOS and the rest\nFixed PowerTimeoutKernelPanic on macOS 12\nFixed transparency click detection on OpenCanopy boot entries\nAdded PCI device info dumping to SysReport\nFixed SetApfsTrimTimeout on macOS 12\nDocumented requirement for SetDefault.icns width to match Selector.icns width\nAdded explicit warn and safe fallback to builtin picker on failure to match the above\nAdded VSCode source level IDE debug config example to debug docs\nAdded other minor debug docs updates\nFixed incorrect timeout of built-in picker on IA32\nAdded support for custom kernels on ESP partition\nFixed DEBUG ASSERT on pressing change entry keys with single boot entry in OpenCanopy\nAdded recommended Apple12 and Windows11 flavours\nAdded TpmInfo tool to DEBUG TPM status\nFixed incorrect OpenCanopy initial display when default entry beyond right of screen\nFixed ProvideCurrentCpuInfo MSR patch on macOS 12\nFixed AppleXcpmForceBoost patch on macOS 12\n\n\n\n\n\nFixed NVRAM reset on firmware with write-protected BootOptionSupport\nImproved direct GOP renderer performance for certain cases\nAdded support for display rotation in direct GOP renderer\nFixed handling multinode device paths in LoadedImage and elsewhere\nChanged OpenCanopy image directory to support directory prefixes\nChanged OpenCanopy preferred image set to Acidanthera\\GoldenGate\nRemoved <BOOTPATH>.icns and <TOOLPATH>.icns support\nAdded content flavour system allowing custom boot entry icons compatible across icon packs\nAdded automatic flavour detection for macOS boot entries\nAdded ProvideCurrentCpuInfo quirk to provide correct TSC/FSB for Hyper-V virtual machines\nAdded Hyper-V device path expansion to allow setting default boot volume\nAdded Apple variant of GopPassThrough to handle only AppleFramebufferInfo handles\nFixed further kernel patches not being processed if a patch was skipped due to arch mismatch\nAdded optional Toggle SIP system boot menu option\nAdded CsrUtil.efi tool, similar to Apple csrutil\nRemoved support for <TOOLPATH>.lbl/.l2x pre-drawn entry labels\nFixed previous text not cleared before console mode tools and entries in OpenCanopy\nFixed DEBUG build crashes with GopPassThrough and UgaPassThrough\nAdded flavour for memory testing utilities\nUpdated recommended memtest86 config in sample .plist files\nDefined bootloader flavours\nApplied own flavour to OC build\nAdded CPU topology fixes to ProvideCurrentCpuInfo quirk\nUpdated OC default SIP disabled value\nDocumented SIP values which affect macOS updates\nAdded csr-data Apple NVRAM var to docs\nFixed file alignment causing codesign issues with CLANGPDB images\nReplaced AdviseWindows with AdviseFeatures to support APFS\n\n\n\n\n\nFixed out-of-sync cursor movement rectangle when loading e.g. CrScreenshotDxe\nUpdated underlying EDK II package to edk2-stable202102\nApplied consistent enforcement of required minimum Apple OEM Apple Event protocol version\nChanged CustomDelays to less surprising boolean setting with failsafe of false\nChanged key repeat failsafes and sample values to Apple OEM values\nChanged PointerSpeedMul failsafe to Apple OEM value\nUpdated docs to include configuration of key repeat settings with and without KeySupport\nPrevented ‘set default’ UI when action not permitted by security config\nAdded ForgeUefiSupport quirk to workaround legacy EFI 1.x firmwares compatibility\nAdded ReloadOptionRoms quirk to force-load Option ROMs on PCI devices\nAdded OC_ATTR_USE_MINIMAL_UI to allow running pickers with no Shutdown and Restart buttons\nAdded display of OpenCore version number to OpenCanopy as well as builtin picker, depending on existing ExposeSensitiveData bit\nAdded support for case-insensitive argument handling in the UEFI tools\nAdded vector acceleration of SHA-512 and SHA-384 hashing algorithms, thx @MikhailKrichanov\nFixed wraparound when using arrow keys in OpenCanopy\nUpdated builtin firmware versions for SMBIOS and the rest\nAdded bundled Linux versions for userspace utilities\nFixed fallback SMBIOS Manufacturer value to NO DIMM for empty slots\nFixed assertions when running OpenCanopy with low resolution, will fallbacks to builtin now\n\n\n\n\n\nSwitched to VS2019 toolchain for Windows builds\nReduced legacy boot install interaction effort\nIncreased OpenCanopy rendering performance\nAdded OpenCanopy Shut Down and Restart buttons\nReduced OpenCanopy mouse pointer input lag\nFixed that cursor bounds could be different from OpenCanopy’s\nImproved builtin picker rendering performance\nAdded Memory Type decoding for SMBIOS in Automatic mode\nProperly support setting custom entries as default boot options\nFixed creating log file when root file system is not writable\nFixed DisableSingleUser not being enabled in certain cases\nAdded ForceBooterSignature quirk for Mac EFI firmware\nFixed OpenCanopy sometimes cutting off shown boot entries\nFurther improved CPU frequency calculation on legacy CPUs\nFixed SMBIOS SMC version encoding sequence\nAdded TSC frequency reading from Apple Platform Info\nAdded TSC frequency reading for Apple devices with nForce chipsets\nAdded Base and BaseSkip lookup for ACPI patches\nFixed ACPI table magic corruption during patching\nFixed unnatural OpenCanopy and FileVault 2 cursor movement\nFixed OpenCanopy interrupt handling causing missed events and lag\nImproved OpenCanopy double-click detection\nReduced OpenCanopy touch input lag and improved usability\nImproved keypress responsiveness in OpenCanopy and builtin pickers\nImproved non-repeating key detection in OpenCanopy and builtin pickers\nFixed Escape preventing OpenCanopy fade up until released, on some systems\nFixed fast repeat then stall issue with key handling on some PS/2 systems\nAdded accurate Shift+Enter/Shift+Index detection when using PollAppleHotKeys\nAdded ‘set default’ indicator to builtin picker\nReplaced VerifyMsrE2 with ControlMsrE2 also allowing unlock on some firmwares\nFixed OpenCanopy flicker when refreshing the entry view\nAdded OpenCanopy TAB navigation support\nAdded OpenCanopy graphical password interface\nAdded OpenCanopy pulsing animation to signal timeout\nAdded OpenCanopy ‘set default’ indicator\nFixed OpenCanopy not aborting timeout on pointer click\nFixed OpenCanopy intro animation not scaling with UIScale\nAdd OpenCanopy boot entry label scrolling (fixes missing long labels)\nAdded tabbable Shutdown and Restart buttons to builtin picker\nFixed in-firmware shutdown for some systems running OpenDuet\nAdded Zero as alias hotkey for Escape, to force show picker if hidden\nAdded =/+ key as alias for CTRL to set default OS\nAdded additional support for configuring correct key repeat behaviour with KeySupport mode\nFixed CPU multiplier detection on pre-Nehalem Intel CPUs\nFixed incorrect handling of multiple processors and processor cache in SMBIOS\nMatched default Apple boot picker cursor start position\nUpdated OpenShell devices command to support misaligned device names returned by some Apple firmware\nAdded (dmg) suffix to DMG boot options in OpenCanopy\nAdded identifiers for Rocket Lake and Tiger Lake CPUs\nAdded PickerAudioAssist ‘disk image’ indication\nFixed PickerAudioAssist indications played twice in rare cases\nImproved OpenCanopy pointer acceleration\nAdded more precise control on AppleEvent protocol properties and features\nAdded dynamic keyboard protocol installation on CrScreenshotDxe\nSupport starting UEFI tools with argument support (e.g. ControlMsrE2) without arguments from picker\nFixed OpenCanopy font height calculation, may reject previously working fonts and mitigate memory corruption\nFixed incorrect identification of Xeon E5XXX/E5-XXXX and Xeon WXXXX/W-XXXX CPUs\nAdded RSDP, RSDT, and XSDT handling to NormalizeHeaders ACPI quirk\n\n\n\n\n\nFixed ocvalidate return code to be non-zero when issues are found\nAdded OEM values to PlatformInfo in Automatic mode\nImproved CPU frequency calculation on Haswell and earlier\nFixed issues when applying certain patches\nAdded SSN (and HW_SSN) variable support\nAdded onscreen early logging in DEBUG builds for legacy firmware\nAdded workaround for firmware not specifying DeviceHandle at bootstrap\nAdded support for R/O page tables in SetupVirtualMap quirk\nAdded OEM preservation for certain Apple SMBIOS tables\nFixed switching to graphics mode when entering OpenCanopy\nFixed installing Apple FB Info protocol when no GOP exists\nFixed abort timeout sound in OpenCanopy on key press\nAdded GopPassThrough option to support GOP protocol over UGA\nFixed CPU speed rounding for certain Xeon and Core 2 CPUs\nRemoved KeyMergeThreshold as it never functioned anyway\nAdded acdtinfo utility to lookup certain products\nFixed FSBFrequency calculation with fractional multiplier\nFixed showing core count for some AMD CPUs\nAdded ResetTrafficClass to reset TCSEL to T0 on legacy HDA\nFixed default boot entry selection without timeout for builtin picker\nAdded ocpasswordgen utility to generate OpenCore password data\nAdded ActivateHpetSupport quirk to activate HPET support\nFixed opencore-version reporting the incorrect version in rare cases\n\n\n\n\n\nAdded keyboard and pointer entry scroll support in OpenCanopy\nAdded background image support in OpenCanopy\nFixed selector boot option choice in OpenCanopy\nRelaxed selector dimensions for OpenCanopy\nAdded MaxBIOSVersion option to Generic\nFixed MLB verification feature in macrecovery\nReplaced VBoxHfs driver with OpenHfsPlus\nAdded audio codec dumping to SysReport\nFixed compatibility with page protection for all binaries\nFixed crashes in OpenUsbKbDxe when handling unsupported devices\nRemoved HdaCodecDump application in favor of SysReport\nAdded SetApfsTrimTimeout to tune APFS trim command\nChanged OpenCore.efi to application to improve FW compatibility\nAdded DisableSecurityPolicy UEFI quirk to workaround driver loading\nAdded support for ranged widget connections in AudioDxe\nFixed supplying non-RT SetVirtualAddressMap for non-macOS systems\nFixed using SystemUuid from DataHub in non-Automatic mode for SMBIOS\nDropped failsafe defaults from Generic to match non-Automatic mode\nReplaced BootProtect with LauncherOption and LauncherPath\nAdded OpenPartitionDxe with Apple Partition Management scheme\nImproved ocvalidate checks in Misc, NVRAM, and UEFI sections\nFixed multiple flaws in EFI image loading, APFS driver in particular\nFixed NVRAM system-id being accidentally stored in Little Endian format\nAdded UseRawUuidEncoding to choose SMBIOS UUID encoding style\nUpdated builtin firmware versions for SMBIOS and the rest\n\n\n\n\n\nFixed installing OpenDuet on protected volumes\nUpdated underlying EDK II package to edk2-stable202011\nUpdated builtin firmware versions for SMBIOS and the rest\nFixed macrecovery server protocol compatibility\nAdded basic audio assistant support in OpenCanopy\nAdded compiled ACPI samples to the package\nFixed timer resolution restoration at boot time\nFixed memory capacity when using custom SMBIOS memory config\nRemoved no longer required DeduplicateBootOrder quirk\nFixed macserial crashes when processing invalid serials\nFixed macserial issues when processing 2021 year serials\nAdded advanced error checking in ocvalidate utility\nAdded SetupDelay to configure audio setup delay\nReworked LogoutHook.command to support older macOS\nImplemented MP3 audio decoding for audio assistant support\nAdded support for PickerVariant for more theme variants\nAdded OC_ATTR_HIDE_THEMED_ICONS PickerAttribute for Time Machine\nFixed OpenUsbKb compatibility with certain keyboards\n\n\n\n\n\nAdded BlacklistAppleUpdate to fix macOS 11 broken update optout\nDropped HII services from OpenDuet improving size and performance\nFixed patching of injected kexts in mkext\nAdded support for launching from relative paths\nAdded direct path passing for tools via RealPath\nAllowed launching tools and entries in text mode via TextMode\nUpdated builtin firmware versions for SMBIOS and the rest\nFixed ACPI patches not applying if tables are in locked memory\nFixed EnableSafeModeSlide on macOS 11\nAdded AllowRelocationBlock quirk for older macOS and safe mode\nFixed CPU frequency calculation on AMD 19h family\nUpdated recovery_urls\nFixed DisableSingleUser quirk when Apple Secure Boot is enabled\nAdded BootstrapShort to workaround buggy Insyde firmware\nChanged Bootstrap(Short) to choose dynamic entry (requires NVRAM reset)\nAvoided Boot prefix in RequestBootVarRouting to workaround AMI issues\nAdded bootloader patch support in Booter Patch section\nFixed startup hang on firmware that permit timer function re-entrance\nMade pointer control optional for OpenCanopy via PickerAttributes\nAdded support for StartupMute variable in PlayChime\nAdded support for per-volume icons for APFS on Preboot\nRemoved HII dependency from OpenUsbKbDxe driver\nFixed undefined behavior in OpenDuet causing random crashes and hangs\n\n\n\n\n\nAdded support for xml comments in plist files\nUpdated underlying EDK II package to edk2-stable202008\nProvide fallbacks for NULL memory SMBIOS strings\nFixed BOOTx64.efi and BOOTIA32.efi convention\nFixed SMBIOS handling with multiple memory arrays\nFixed memory array handle assignment on empty slots\nFixed CPUID patching on certain versions of macOS 10.4.10 and 10.4.11\nFixed incorrect core/thread counts on Pentium M processors\nAdded SSDT-UNC.dsl ACPI sample to resolve X99 issues, thx @RemB\nUpdated builtin firmware versions for SMBIOS and the rest\nIncreased slide allocation reserve to 200 MB for Big Sur beta 10\nFixed assert when trying to enable direct renderer on blit-only GOP\nAdded support for custom memory properties\nFixed intermittent 32-bit prelinking failures caused by improper Mach-O expansion\nFixed failures in cacheless injection dependency resolution\nFixed detection issues with older Atom CPUs\nFixed ScanPolicy NVMe handling on MacPro5,1\nFixed I/O issues on platforms incapable of reading over 1MB at once\nFixed plist-only kext injection in Big Sur\nAdd ForceResolution option for enabling non-default resolutions\nFixed Ps2MouseDxe not properly loading under OpenDuetPkg\nAdded workaround for read-only errors on some X299 boards\nAdded support for x86legacy Secure Boot model\nAdded missing Secure Boot NVRAM variables required by 11.0\nAdded setting of system-id NVRAM variable\nAdded ForceSecureBootScheme quirk for virtual machines\nFixed kernel and ACPI patches failing to replace last bytes of memory\n\n\n\n\n\nUpdated builtin firmware versions for SMBIOS and the rest\nAdded ProcessorType option to Generic allowing custom CPU names\nFixed UnblockFsConnect option not working with APFS JumpStart\nAdded IA32 binary variant to the release bundles\nFixed improper handling of cacheless kexts without an Info.plist\nFixed improper calculation of kext startup address for blocking\nAdded mkext 32-bit kext injection (10.4-10.6)\nAdded cacheless 32-bit kext injection (10.4-10.7)\nAdded 32-bit kernel/kext patching/blocking support\nFixed issues loading 10.7 EfiBoot\nAdded Type to ReservedMemory to fulfil hibernation hack needs\nAdded workaround to displaying Preboot instead of Macintosh HD\nAdded prelinkedkernel 32-bit kext injection (10.6-10.7)\nAdded SystemMemoryStatus to override memory replacement on some models\nAdded older Pentium CPU recognition in SMBIOS\nAdded ExtendBTFeatureFlags to properly set FeatureFlags for Bluetooth (which substitutes BT4LEContinuityFixup)\nAdded MinKernel/MaxKernel to CPUID emulation and DummyPowerManagement\nFixed -legacy not being added in KernelArch Auto mode\nFixed i386-user32 not forcing i386 on macOS 10.7 on X64 firmware\nFixed i386-user32 being incorrectly enabled in macOS 10.4, 10.5, and 10.7\nDisabled prelinked boot for macOS 10.4 and 10.5 in KernelCache Auto mode\nFixed macserial compatibility with iMac20,x serials and other models from 2020\nAdded LegacyCommpage quirk to improve pre-SSSE3 userspace compatibility\nFixed legacy SATA HDDs displaying as external drives in the picker\n\n\n\n\n\nImproved recognition of early pressed hotkeys, thx @varahash\nMade DMG loading support configurable via DmgLoading\nAdded iMac20,1 and iMac20,2 model codes\nFixed display name for older Xeon CPUs like Xeon E5450\nAdded Comet Lake-LP HDA device code\nFixed OS boot selection on SATA controllers with legacy OPROMs\nFixed RSDP ACPI table checksum recalculation\nAdded immutablekernel loading support for 10.13+\nFixed solving some symbols to zero in 11.0 kext inject\nReduced OpenCanopy size by restricting boot management access\nAdded BuiltinText variant for TextRenderer for older laptops\nFixed SyncRuntimePermissions creating invalid MAT table\nAdded EFI FAT image loading support (macOS 10.8 and earlier)\nAdded 64-bit cacheless kext injection and patching support (macOS 10.9 and earlier)\nAdded 64-bit mkext kext injection and patching support (macOS 10.6 and earlier)\nFixed XNU hook matching non-kernel files\nUpdated builtin firmware versions for SMBIOS and the rest\nFixed patching of ACPI tables in low memory\nFixed macOS 11.0 DMG recovery loading without hotplug\nFixed XhciPortLimit quirk on 10.12.6 and possibly other versions\nFixed IncreasePciBarSize quirk on 10.11.5 and possibly other versions\nFixed LapicKernelPanic quirk on 10.8.5 and possibly other versions\nFixed hard-lock caused by EHCI SMI in OpenDuetPkg\nAdded preview UEFI Secure Boot compatibility\nAdded FuzzyMatch option to support fuzzy kernelcache matching on 10.6 and earlier\nAdded KernelArch option to specify architecture preference on older kernels\nAdded KernelCache option to specify kernel caching preference for older kernels\nAdded Force section to provide support for injecting drivers in older macOS\nChanged kernel driver injection to happen prior to kernel driver patching\nAdded Arch filtering option to Add, Block, Force, and Patch sections\nAdded DisableLinkeditJettison quirk to workaround 11.0b5 kernel panics\nAdded debugging of missing fields in the configuration\n\n\n\n\n\nFixed sound corruption with AudioDxe\nFixed icon choice for Apple FW update in OpenCanopy\nFixed APFS driver loading on Fusion Drive\nAdded Comet Lake HDA device code\nFixed audio stream position reporting on non-Intel platforms\nAdded Firmware mode to ResetSystem to reboot into preferences\nReplaced BlacklistAppleUpdate with run-efi-updater NVRAM variable\nFixed reset value and detection in FadtEnableReset ACPI quirk\nFixed freezes during boot option expansion with PXE boot entries\nUpdated underlying EDK II package to edk2-stable202005\nAdded ProvideMaxSlide quirk to improve laptop stability, thx @zhen-zen\nFixed slide choice on platforms when 0 slide is unavailable, thx @zhen-zen\nFixed assertions caused by unaligned file path access in DEBUG builds\nRenamed ConfigValidity utility to ocvalidate for consistency\nAdded GlobalConnect for APFS loading to workaround older firmware issues\nAdded 11.0 support for AvoidRuntimeDefrag Booter quirk\nFixed 11.0 lapic kernel quirk as of DP1\nImproved boot selection scripts for macOS without NVRAM\nAdded UGA protocol compatibility in ProvideConsoleGop quirk\nAdded UgaPassThrough option to support UGA protocol over GOP\nAdded AppleFramebufferInfo protocol implementation and override\nFixed serial initialisation when file logging is disabled\nFixed FSBFrequency reporting on Meron and similar CPUs\nFixed incorrect volume icon dimension requirements in OpenCanopy\nAdded preview version of KernelCollection injection code\nFixed ACPI reset register detection in DxeIpl\nAdded MacBookPro16,4 model code\nUpdated builtin firmware versions for SMBIOS and the rest\nFixed OSXSAVE reporting when emulating CPUID on newer CPUs\nAdded SerialInit option to perform serial initialisation separately\nFixed OpenDuetPkg booting on Intel G33 with SATA controller in RAID mode\nPlatformInfo Automatic for all models\nFixed 32-bit OpenDuetPkg booting on machines with over 4 GBs of RAM\nFixed delays with OpenDuetPkg booting with certain SATA controllers in IDE mode\nFixed display name for some high core count i9 CPUs like 7920X\nFixed SSDT-EC-USBX\n\n\n\n\n\nAdded full HiDPI support in OpenCanopy\nImproved OpenCanopy font rendering by using CoreText\nFixed light and custom background font rendering\nAdded Boot#### options support in boot entry listing\nRemoved HideSelf by pattern recognising BOOTx64.efi\nAdded BlacklistAppleUpdate to avoid Apple FW updates\nFixed accidental tool and NVRAM reset booting by default\nFixed unrecognised select com.apple.recovery.boot entries\nChanged NVRAM reset not to erase BootProtect boot options\nImproved boot performance when picker UI is disabled\nEnforced the use of builtin picker when external fails\nFixed warnings for empty NVRAM variables (e.g. rtc-blacklist)\nAdded ApplePanic to store panic logs on ESP root\nFixed ReconnectOnResChange reconnecting even without res change\nFixed OpenCanopy showing internal icons for external drives\nFixed OpenCanopy launching Shell with text over it\nAdded partial hotkey support to OpenCanopy (e.g. Ctrl+Enter)\nAdded builtin text renderer compatibility with Shell page mode\nFixed FadtEnableReset with too small FACP tables and some laptops\nFixed CPU detection crash with QEMU 5.0 and KVM accelerator\nRemoved RequestBootVarFallback due to numerous bugs\nAdded DeduplicateBootOrder UEFI quirk\nRemoved DirectGopCacheMode due to being ineffective\nFixed assertions on log exhaustion causing boot failures\nFixed builtin text renderer failing to provide ConsoleControl\nFixed compatibility with blit-only GOP (e.g. OVMF Bochs)\nFixed ignoring # in DeviceProperty and NVRAM Delete\nRenamed Block to Delete in ACPI,DeviceProperties, and NVRAM\nAdded MacBookPro16,2 and MacBookPro16,3 model codes\nAdded PCI device scanning policy support (e.g. VIRTIO)\nImproved playback performance in AudioDxe\nUpdated builtin firmware versions for SMBIOS and the rest\nAdded improved CPU type detection for newer CPU types\nAdded ConfigValidity utility and improved config validation\nAdded serial port initialisation for serial debug logging\nDisabled empty debug log file creation to avoid ESP cluttering\nAdded TscSyncTimeout quirk to workaround debug kernel assertions\nAdded first-class Windows support to bless model\nFixed LapicKernelPanic kernel quirk on 10.9\nAdded prebuilt version of CrScreenshotDxe driver\nFixed Hyper-V frequency detection compatibility\nAdded SysReport option for DEBUG builds to dump system info\nFixed crashes on some AMD firmware when performing keyboard input\n\n\n\n\n\nFixed invalid CPU object reference in SSDT-PLUG\nFixed incorrect utilities and resources packaging\nFixed Custom UpdateSMBIOSMode modifying SMBIOSv3 table\nUpdated docs to cover separating SMBIOS via UpdateSMBIOSMode\nFixed rendering macOS installer icons in OpenCanopy\nAdded APFS support with Fusion Drive and enhanced security\nAdded AppleEvent mouse support in OpenCanopy\nFixed AppleEvent and OpenCanopy compatibility with OVMF TPL restrictions\nAdded mouse drivers to the package as OVMF needs one\nAdded memory region reservation support\nAdded RtcRw tool to manipulate RTC memory\nAdded PatchAppleRtcChecksum kernel quirk\nAdded AppleRtcRam protocol implementation\nRenamed Protocols to ProtocolOverrides for clarity\nAdded ResetSystem tool to allow shutdown/reset actions in the menu\nAdded experimental BootProtect Security option\nFixed kext injection in 10.8 installer\nAdded timeout support to OpenCanopy user interface\nFixed handling 24-bit screen resolutions\nAdded Ps2KeyboardDxe driver for DuetPkg\nUpdated BootInstall DuetPkg version (now opensource)\nAdded partial HiDPI support in OpenCanopy\nUpdate builtin firmware\nFixed invalid checksum checks when creating vault (thx @dakanji)\n\n\n\n\n\nAdded TimeMachine detection to picker\nAdded early preview version of OpenCanopy\nFixed FS discovery on NVMe with legacy drivers\nAdded DirectGopCacheMode option for FB cache policy\nAdded KeyFiltering option to workaround buggy KB drivers\nAdded tool and custom entry separation in audio assistant\nAdded OpenControl tool to configure full NVRAM access from Shell\nAdded boot.efi debug protocol support for 10.15.4+\nAdded boot.efi performance logging for 10.15.4+\nAdded ProtectUefiServices quirk to fix DevirtualiseMmio on Z390\nReplaced BOOTCAMP Windows with Windows to match the original\nAdded bundled OpenShell originally available as OpenCoreShell\nRework readlabel utility into disklabel with encoding support\nRenamed FwRuntimeServices driver to OpenRuntime\nRenamed AppleUsbKbDxe driver to OpenUsbKbDxe\nUpdate builtin firmware\nFixed PowerTimeoutKernelPanic on 10.15.4\nFixed 4K section alignment in OpenRuntime to fix Linux booting on SKL\nIntroduced SyncRuntimePermissions to fix multiple memory permission flaws\nIntroduced RebuildAppleMemoryMap to fix macOS booting on Dell 5490\nRemoved ShrinkMemoryMap in favour of more advanced RebuildAppleMemoryMap\nMarked EnableWriteUnprotector as deprecated on modern systems\nIntroduced ProtectMemoryRegions to fix memory region handling\nRemoved ProtectCsmRegion in favour of ProtectMemoryRegions\nRenamed PickerAttributes to ConsoleAttributes\nIntroduced PickerAttributes as a matter of UI configuration\n\n\n\n\n\nVarious improvements to builtin text renderer\nFixed locating DMG recovery in APTIO IV firmware on FAT32\nFixed loading DMG recovery in APTIO IV firmware on FAT32\nRemoved AvoidHighAlloc quirk due to removed I/O over 4GB\nMoved ConsoleMode, Resolution options to Output section\nMoved console-related UEFI quirks to Output section\nReplaced ConsoleControl and BuiltinTextRenderer with TextRenderer\nRemoved ConsoleBehaviourOs and ConsoleBehaviourUi\nFixed providing ConsoleOutHandle GOP when running from Shell\nAdded PickerAttributes option to colour picker\nAdded ProtectSecureBoot option through FwRuntimeServices\nReplaced RequireVault and RequireSignature with Vault\nAdded BootKicker tool to support launching Apple BootPicker\nAdded BootPicker support as an external UI in OC through PickerMode\nAdded DirectGopRendering option to use direct GOP output\nMultiple memory corruption and performance fixes for PNG support\nFixed DefaultBackgroundColor variable handling\nAdded HideAuxiliary and Auxiliary options\nFixed picker timeout and log timestamps for VMware\nFixed NULL parent DeviceHandle for launched tools\nAdded bundled HiiDatabase driver for very old firmware\nAdded SSE2 support in memory intrinsics for better performance\nImproved ACPI PM timer CPU frequency calculation performance\nImproved LapicKernelPanic compatibility with newer macOS versions\nFixed drivers starting with # not being skipped\nAdded audio support through AudioDxe with optional boot chime\nAdded VoiceOver accessability support in boot.efi for 10.13+\nAdded PickerAudioAssist option for audio assistance in picker\nAdded HdaCodecDump.efi tool in default package\nAdded legacy AudioDxe and Microsoft namespaces to Reset NVRAM\nMerged OcSupportPkg with OpenCorePkg for easier bisection\nDisabled warnings in release versions of NVMe and XHCI drivers\n\n\n\n\n\nFixed CPU bus ratio calculation for Nehalem and Westmere\nFixed CPU package calculation on MacPro5,1 and similar\nImproved OpenCore rerun detection for new versions\nFixed loading picker on boot failure when it is hidden\nAdded PMC ACPI sample for 300-series chipsets\nImproved driver connection performance on APTIO IV\nFixed boot option saving in LogoutHook.command\nAdded support for OEM information in ExposeSensitiveData\nImproved SanitiseClearScreen to avoid mode switching\nReplaced SupportsCsm with AdviseWindows enabling UEFI mode\nFixed issues with default boot path selection on some boards\nUpdate builtin firmware versions\nFixed AdviseWindows not setting FirmwareFeatures in NVRAM\nAdded TakeoffDelay option for improved action hotkey support\nAdded Mac GOP support to ProvideConsoleGop quirk\nAdded experimental BuiltinTextRenderer boot option\nAdded DummyPowerManagement kernel quirk to disable CPU PM\n\n\n\n\n\nAdded Enter key handling in boot menu for quick proceed\nUpdate builtin firmware versions\nBundled FwRuntimeServices driver with OpenCore\nAllowed writing to non-volatile variables with disabled write\nFixed microcode reading on Intel CPUs\nFixed SMBIOS Type4 External Clock values\nImproved Windows compatibility on some setups (acidanthera/bugtracker#614)\nAdded SupportsCsm and option in PlatformInfo/Generic\nAdded OSInfo protocol support\nAdded SignalAppleOS Booter quirk to enable IGPU on Macs in other OS\nAdded AppleSmcIoprotocol support (replaces VirtualSmc UEFI driver)\nAdded AuthRestart security property for VirtualSMC authenticated restart\nFixed input protocol initialisation on VMware fusion\nAdded arrow key handling in boot menu\nFileVault 2-like key input is now the only supported input in boot menu\nFixed 5 second delay when exiting Shell to OpenCore Picker\nAdded default boot option update and AllowSetDefault Security option\nFixed CPU package detection on configurations with multiple CPUs\nBundled CleanNvram and VerifyMsrE2 tools for debugging\nAdded screen clearing after choosing boot entry in picker\nAdded WriteFlash NVRAM option to enable writing variables in Add\nAdded LegacyOverwrite NVRAM option to allow overwriting variables by nvram.plist\nAdded AppleXcpmForceBoost kernel quirk to maximise select Xeon performance\nBundled NvmExpressDxe and XhciDxe drivers for platforms that need them\nAdded IncreasePciBarSize kernel quirk for select platforms with PCI space issues\n\n\n\n\n\nUpdate builtin firmware versions\nFixed interpreting letters in boot menu\nFixed timeout abortion with PollAppleHotKeys quirk\nFixed rare kext injection failure due to plist-only kext in prelinkedkernel\nFixed error reporting for dmg loading\nAdded various debugging improvements\nAdded new crypto stack resulting in vault key format changes\nAdded UnblockFsConnect UEFI quirk to fix missing filesystems on some laptops\nAdded RequestBootVarFallback UEFI quirk to circumvent firmware boot option issues\nAdded ThirdPartyDrives kernel quirk fixing SSD trim and 10.15 SATA hibernation (thx @lvs1974)\nRemoved ThirdPartyTrim kernel quirk in favour of ThirdPartyDrives\nAdded Intel Xeon E5 (Broadwell-EP) support (thx @crazyi)\nSwitched to edk2-stable201911, which is now the minimum supportd EDK II version\n\n\n\n\n\nFixed MinKernel and MaxKernel logic (thx @dhinakg, @reitermarkus)\nFixed ASSERT when booting non-Apple OSes without arguments from the DEBUG version\nAdded MmioWhitelist configuration option\nAdded PowerTimeoutKernelPanic kernel quirk\nFixed erratic cursor appearing in release builds\nMoved ReconnectOnResChange to a user-configurable quirk to avoid freezes\nAdded OpenCore version to picker ui, configured by ExposeSensitiveData\nAdded hypervisor CPUID support to work with virtualization (thx @Leoyzen)\n\n\n\n\n\nAdded support of kernel resource kext injection\nAdded support for 0.25% clock slowdown on Xeon Scalable CPUs (thx @mrmiller)\nReplaced MatchKernel with MinKernel and MaxKernel\nAdded Arguments to Tools and Entries sections\nFixed broken timer for 300 series Intel chipsets\nAdded Input section for mouse and keyboard aggregation\n\n\n\n\n\nAdded builtin firmware versions for new models 2019\nFixed LogoutHook leaving random directories in $HOME\nFixed FSBFrequency calculation on Xeon Scalable CPUs (thx @mrmiller)\nFixed ARTFrequency specifying on Intel server and atom models\nIncreased log size to 256 KB by default\nAdded ReplaceTabWithSpace quirk to improve Shell experience\nAdded ClearScreenOnModeSwitch quirk to avoid visual glitches\nAdded MISC_PWR_MGMT patch to AppleXcpmExtraMsrs quirk (thx @mrmiller)\nAdded DevirtualiseMmio quirk to Booter section\nAdded FileVault 2 user interface protocols formerly in AppleUiSupport\nImproved kernel patch logging to include configuration comments\nAdded MSFT basic data and Linux root fs recognition to ScanPolicy\nFixed RT region protection restoration regression (thx Sniki)\nAdded OPT, CMD+R, CMD+OPT+P+R boot action hotkey support\nAdded PollAppleHotKeys to register boot.efi hotkeys in the picker\nAdded DisableSingleUser quirk to prohibit single user mode\nUpgraded EDK II base package to edk2-stable201908\nProhibited argument changing by BootNext\n\n\n\n\n\nFixed kext injection issues with dummy dependencies\nFixed kext injection issues with reused vtables\nFixed Custom SMBIOS table update patches\nAdded timestamp to the log file and changed extension to txt\nEnhanced LogoutHook script used for emulated NVRAM saving\nFixed multiple operating system support in APFS containers\nAdded AvoidHighAlloc UEFI quirk to avoid high memory allocs\nUpdated builtin firmware versions for 10.15 beta support\nAdded Booter section for Apple bootloader preferences\nDropped AptioMemoryFix.efi support for Booter and FwRuntimeServices.efi\nFixed hibernation issues in Windows with RequestBootVarRouting\nSignificantly improved boot stability on APTIO\nAdded support for Windows & OpenCore on the same drive through BlessOverride\nAdded advanced user-specified boot entries through Misc -> Entries\nAdded DisableVariableWrite quirk to disable hardware NVRAM write in macOS\n\n\n\n\n\nAdded complete modern platform database (2012+)\nAdded DisableIoMapper kernel quirk\nFixed ACPI modification failures with nested multiboot\nDropped IgnoreForWindows quirk legacy\nAdded basic AMD Zen CPU support\nAdded Misc -> Tools section to add third-party tools\nAdded Kernel -> Emulate section for CPUID patches\nAdded CustomSMBIOSGuid quirk for Custom SMBIOS update mode\nAdded PanicNoKextDump quirk to avoid kext dump in panics\nSwitched to EDK II stable and reduced image size\nAdded LapicKernelPanic kernel quirk\nAdded AppleXcpmExtraMsrs quirk and improved XCPM patches\nAdded (external) suffix for external drives in boot menu\nAdded UsePicker option, do enable for OC boot management\nAdded nvram.plist loading for legacy and incompatible platforms\nImproved instructions for legacy and Windows installation\nAdded Windows Boot Camp switching support\nAdded basic hibernation detection & support\nAdded ResetHwSig ACPI quirk to workaround hibernation\nRemoved Custom subfolder requirement from ACPI tables\nFixed kext injection in 10.7.x and 10.8.x\nAdded ESP partition type detection to ScanPolicy\nAdded support for third-party user interfaces\n\n\n\n\n\nDocumentation improvements (see Differences.pdf)\nPlatform information database updates\nFixed misbehaving Debug -> Target enable bit\nAdded ResetLogoStatus ACPI quirk\nAdded SpoofVendor PlatformInfo feature\nReplaced ExposeBootPath with ExposeSensitiveData\nAdded builtin implementation of Data Hub protocol\nDropped UpdateSMBIOSMode Auto mode in favour of Create\nFixed SMBIOS CPU detection for Xeon and Core models\nMoved ConsoleControl configuration to Protocols\nAdded Security -> ScanPolicy preference\nFixed invalid board-rev exposure in Data Hub\nFixed SMBIOS Type 133 table exposure\nAdded support for SMBIOS Type 134 table exposure\n\n\n\n\n\nInitial developer preview release"
  },
  {
    "objectID": "posts/uefi-secure-boot/opencore/Utilities/macserial/FORMAT.html",
    "href": "posts/uefi-secure-boot/opencore/Utilities/macserial/FORMAT.html",
    "title": "Peter Pham Github Pages",
    "section": "",
    "text": "It is reasonably important to get more information about the goods you buy, especially if they are not new, and you do not have absolute confidence in the seller. Serial numbers are the first thing to look at. For Apple products Apple Check Coverage is your best friend.\nHowever, it does not show all the details encoded in the serial, and in some case it may be important. For example, certain shady dealers may change one valid serial by the other, and it will not be obvious at a glance that the serial does not belong to the actual model. This FAQ attempts to explain the reverse-engineered structure of the serials used in Apple hardware.\nYou could always receive information about the current serial number of your Mac by running ./macserial. For the other serial use ./macserial -i SERIALNUMBER, where SERIALNUMBER is the serial you check.\n\n\nSelect fields in the numbers are encoded values in base 34. So, certain alpha-numeric characters represent a slightly uncommon base 34 code excluding O and I.\n\n\n\nChar\nValue\nChar\nValue\n\n\n\n\n0\n0\nH\n17\n\n\n1\n1\nJ\n18\n\n\n2\n2\nK\n19\n\n\n3\n3\nL\n20\n\n\n4\n4\nM\n21\n\n\n5\n5\nN\n22\n\n\n6\n6\nP\n23\n\n\n7\n7\nQ\n24\n\n\n8\n8\nR\n25\n\n\n9\n9\nS\n26\n\n\nA\n10\nT\n27\n\n\nB\n11\nU\n28\n\n\nC\n12\nV\n29\n\n\nD\n13\nW\n30\n\n\nE\n14\nX\n31\n\n\nF\n15\nY\n32\n\n\nG\n16\nZ\n33\n\n\n\n\n\n\nThere generally are 2 similar formats of serial encoding: the old 11 character format, and the new 12 character format.\n\n\n\nType\nLocation\nYear\nWeek\nLine\nProduct\n\n\n\n\nOld (11)\nLL\nY\nWW\nSSS\nPPP\n\n\nNew (12)\nLLL\nY\nW\nSSS\nPPPP\n\n\n\nNote: Models late 2021+ contain SN with 10 character format.\n\n\nThis value encodes the manufacturing location, which is often more descriptive than Made in China, since it may reveal the responsible company and the city. For example, F5K means USA (Flextronics) and QT means Taiwan (Quanta Computer). The list is not standardised or published anywhere, but you can see several known locations by running ./macserial -l.\nOne of the important locations for old-style serials (11 characters) is RM. It means that the model was refurbished. For new-style serials you have to call Apple support to know this.\n\n\n\nYear encodes the actual manufacturing year of each model. For refurbished models it is unknown whether it is replaced by the remanufacturing year.\nFor old-style serials it always is a digit that encodes the last digit of the year. For example, 8 means 2008 and 1 means 2011. Only 0 to 9 digitis are used for year encoding. Old-style serials are out of use starting with 2013, so 3 means 2003 not 2013.\n\n\n\nChar\nYear\n\n\n\n\n3\n2003\n\n\n4\n2004\n\n\n5\n2005\n\n\n6\n2006\n\n\n7\n2007\n\n\n8\n2008\n\n\n9\n2009\n\n\n0\n2010\n\n\n1\n2011\n\n\n2\n2012\n\n\n\nFor new-style serials it is an alphanumeric value, which not only encodes the year, but its half as well. Not all the values are allowed. The table below outlines the pairs of characters which are assumed to encode each supported year. First character in the pair is believed to encode the first half of the year, and the second character — the second half.\n\n\n\nPair\nYear\n\n\n\n\nC, D\n2010\n\n\nF, G\n2011\n\n\nH, J\n2012\n\n\nK, L\n2013\n\n\nM, N\n2014\n\n\nP, Q\n2015\n\n\nR, S\n2016\n\n\nT, V\n2017\n\n\nW, X\n2018\n\n\nY, Z\n2019\n\n\nC, D\n2020\n\n\nF, G\n2021\n\n\n\n\n\n\nWeek encodes the actual manufacturing week of each model. This week has nothing in common with ISO 8601, and appears to be encoded literally as 7-day sequences starting from January, 1st. Since each year has either 365 or 366 days, 53rd week is extremely rare, and you are lucky to have such a serial.\nFor old-style serials week is encoded in plain numeric digits with leading zeroes. 01, 02, … 53. For new-style serials an alpha-numeric code is used. Encoded year half also counts and means adds 26 weeks for the second one.\n\n\n\nChar\n1st half\n2nd half\n\n\n\n\n1\n1\n27\n\n\n2\n2\n28\n\n\n3\n3\n29\n\n\n4\n4\n30\n\n\n5\n5\n31\n\n\n6\n6\n32\n\n\n7\n7\n33\n\n\n8\n8\n34\n\n\n9\n9\n35\n\n\nC\n10\n36\n\n\nD\n11\n37\n\n\nF\n12\n38\n\n\nG\n13\n39\n\n\nH\n14\n40\n\n\nJ\n15\n41\n\n\nK\n16\n42\n\n\nL\n17\n43\n\n\nM\n18\n44\n\n\nN\n19\n45\n\n\nP\n20\n46\n\n\nQ\n21\n47\n\n\nR\n22\n48\n\n\nT\n23\n49\n\n\nV\n24\n50\n\n\nW\n25\n51\n\n\nX\n26\n52\n\n\nY\n-\n53\n\n\n\nFor old-style serials it is a pair of two digits, which encode the manufacturing week.\n\n\n\nProduction line is believed to be related to some identifier at assembly stage. It is encoded in base 34, but the actual derivation process is unknown and can only be guessed with relative success.\nCurrent model, which apparently works well, represents it as a sum of three alpha-numeric characters with 1, 34, and 68 multipliers. The actual formula looks as follows:\nbase34[S1] * 68 + base34[S2] * 34 + base34[S3] = production line\nThis formula effectively defines a compression function, which allows to encode a total of 3400 production lines from 0 to 3399. The compression produced by shortening 39304 space to 3400 allows multiple encodings of the same line. For example, for 939 line there can be 14 derivatives or “copies”: 0TM, 1RM, 2PM, 3MM, 4KM, …, D1M.\nWhile the formula does look strange, it was experimentally discovered that up to N first encoded derivatives are valid, and starting with the first invalid derivative there will be no valid ones. Thus for a complete serial list made up with all the derivatives from the above the following is assumed to be true: if 0TM and 2PM are valid and 3MM is invalid, then 1RM will also be valid, and 4KM to D1M will be invalid. From this data it could be theorised that the encoded value is incremented for each model produced from the same line. So 0TM is the first copy produced, and D1M is the last copy.\nUpdate: At a later stage very few examples of valid derivatives after invalid were found. These exceptions disprove at least some parts of the model, but currently there exists no better theory.\n\n\n\nLast 3 (for legacy serials) or 4 (for new serials) symbols encode the actual product identifier of this exact piece of the hardware. This is probably the most useful part of the serial, since it allows you to get the detailed description of your hardware directly from the dedicated Apple Specs portal. To do so you need to modify the following URI to contain your real product code instead of PPPP and follow it in your browser:\nhttp://support-sp.apple.com/sp/index?page=cpuspec&cc=PPPP\nFor example, for iMacPro1,1 it could be HX87 and for MacBookPro14,3 it could be HTD5.\nThe list is not standardised or published anywhere, but you can see most products by running ./macserial -lp and ./macserial -l to match against mac models. The value seems to be a classic base 34 sequence: P1 * 39304 + P2 * 1156 + P3 * 34 + P4. The ranges seem to be allocated in chunks in non-decreasing manner. Normally each chunk is distanced from another chunk by up to 64 (90% matches).\n\n\n\n\nThere generally are 2 formats of logic board serial encoding: the old 13 character format, and the new 17 character format. Unlike serial number, these formats are quite different and in addition very little is known about MLB in general.\n\n\n\n\n\n\n\n\n\n\n\n\n\nType\nLocation\nYear\nWeek\nItem\nInfix\nProduct\nSuffix\n\n\n\n\nOld (13)\nLL\nY\nWW\nIIII\n\nEEE\nC\n\n\nNew (17)\nLLL\nY\nWW\nIII\nAA\nEEEE\nCC\n\n\n\nWhile it is unclear if this is intentional, for 17 character MLB it is possible to perform basic validation online through osrecovery.apple.com. The recovery server will return valid latest recovery image only when MLB is valid. Use ./macrecovery.py verify -m MLB -b BOARD-ID to try verifying your MLB number.\nIt is not clear how strongly MLB is attached to serial number (SN). The following is known:\n\nMinimal supported macOS version is identified by EEEE\nMaximum supported macOS version is identified by EEEE and board-id\nRecovery server accepts a range of models with the same MLB (with only latest os different)\n\nThe following is suspected: - EEEE is unique number for all MLBs - EEEE are shared across different models and thus cannot identify the model\n\n\nMLB location is equivalent to serial number location but does not necessarily match it, as logic boards can be manufactured at a different place.\n\n\n\nMLB year and week in both 13-character and 17-character MLB are equivalent to legacy serial number year and week. The values are slightly lower as logic board is manufactured prior to the complete product.\n\n\n\nMLB item is encoded differently for 13-character and 17-character MLB. It might serve as a production item per week and could be similar to ‘Production line and copy’ in the serial number.\n\nFor old MLB, this is a variant of base 34 value. First item character is always 0.\nFor new MLB, this value always is a number.\n\n\n\n\nBase 34 value present in new MLBs only. No information is known about it. Could actually be part of Item.\n\n\n\nSimilarly to ‘Product model’ this field encodes logic board model number. This code is often referred to as EEE code in part catalogues and is useful for purchasing a compatible logic board for replacement.\nFor new 17 character MLBs this field is also used for identification at osrecovery.apple.com to provide a compatible internet recovery image and diagnostic tools upon request.\n\n\n\nBase 34 value with unclear designation. Might be used for checksum validation. Checksum validation algorithm is reverse engineered from diagnostics tools and is valid for all 17 character MLBs. It is not clear whether 13 character MLBs have any checksum. 17 character MLB checksum follows.\nstatic bool verify_mlb_checksum(const char *mlb, size_t len) {\n const char alphabet[] = \"0123456789ABCDEFGHJKLMNPQRSTUVWXYZ\";\n size_t checksum = 0;\n for (size_t i = 0; i < len; ++i) {\n   for (size_t j = 0; j <= sizeof (alphabet); ++j) {\n     if (j == sizeof (alphabet))\n       return false;\n     if (mlb[i] == alphabet[j]) {\n       checksum += (((i & 1) == (len & 1)) * 2 + 1) * j;\n       break;\n     }\n   }\n }\n return checksum % (sizeof(alphabet) - 1) == 0;\n}\n\n\n\n\nThis information was obtained experimentally and may not be accurate in certain details. Be warned that it is published at no warranty for educational and introductory purposes only."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "My Personal Blog",
    "section": "",
    "text": "Secure Boot\n\n\nUEFI\n\n\nEDK2\n\n\nopenSSL\n\n\n\n\n\n\n\n\n\n\n\nSep 1, 2022\n\n\nPeter Pham\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  }
]